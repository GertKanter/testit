tests:
  - tag: "Scenario #1" # identifier for reporting
    pipeline: "" # leave empty for any
    source: "/testit_tests/01" # test scenario source directory (SMACH state machine, UPPAAL model etc) inside TestIt docker container
    launch: "rosrun mission_control start_move_base_in_docker.sh" # how to execute this test (run command) in TestIt container
    oracle: "rosrun testit_tutorials tutorials/turtlebot/testit_tests/01/oracle/oracle.py" # determining whether pass/fail, if empty = "launch" execution result will be used to determine pass/fail
    timeout: 30 # time in seconds for timeout (0 for no timeout)
    timeoutVerdict: False # if timeout occurs, declare the test as this (False = fail, True = success)
configuration:
  bringupSUT: "" # how to bring up a pipeline server/docker SUT (general case), you can use "[[]]" for replacing
  bringupSUTDelay: 1 # seconds (0 for no timeout, but you have to specify bringup_finish_trigger then or tests will not be run)
  bringupSUTFinishTrigger: "-" # command to test whether startup is finished, "-" = no trigger
  runSUT: "docker run --rm --net=rosnetwork --env ROS_HOSTNAME=[[masterHost]] --env ROS_MASTER_URI=http://[[masterHost]]:11311 --name [[masterHost]] -dt testit_tb_sut:noautorun /bin/bash -c \"source /catkin_ws/devel/setup.bash && rosrun mission_control start_move_base_in_docker.sh && tail -f /dev/null\"" # run SUT 
  runSUTDelay: 5
  runSUTFinishTrigger: "-"
  stopSUT: "docker kill [[masterHost]]"
  stopSUTDelay: 5
  stopSUTFinishTrigger: "-"
  teardownSUT: "" # how to clean up after finishing (shut down server/docker) (general case)
  teardownSUTDelay: 5
  teardownSUTFinishTrigger: "-"
  bringupTestIt: "" # bring up the pipeline server (in the cloud for example)
  bringupTestItDelay: 1
  bringupTestItFinishTrigger: "-"
  runTestIt: "docker run --rm --volume=$(rospack find testit_tutorials)/tutorials/turtlebot/testit_tests/:/testit_tests --net=rosnetwork --env ROS_HOSTNAME=[[testitHost]] --env ROS_MASTER_URI=http://[[masterHost]]:11311 --name [[testitHost]] -dt testit_tb_testit /bin/bash -c \"tail -f /dev/null\"" # how to bring up a pipeline TestIt (general case), you can use "[[]]" for replacing 
  runTestItDelay: 5
  runTestItFinishTrigger: "-"
  stopTestIt: "docker kill [[testitHost]]" # general case pipeline stopping
  stopTestItDelay: 5
  stopTestItFinishTrigger: "-"
  teardownTestIt: ""
  teardownTestItDelay: 5 # empty string = use default
  teardownTestItFinishTrigger: "-" # command to test whether startup is finished, "-" = no trigger
  noSSH: ["127.0.0.1"] # do not use SSH to connect to these IPs (useful for running TestIt and SUT on localhost or local docker)
pipelines:
  - tag: "Pipeline #1" # identifier for reporting
    masterHost: "sut1"
    testitHost: "testit1"
    masterIP: "-" # where SUT roscore is running (used if masterHost is not defined) ("-" means none)
    testitIP: "-" # where TestIt docker container is running (used if testitHost is not defined) ("-" means none)
    bringupSUT: "" # empty string = use default
    bringupSUTDelay: "" # empty string = use default
    bringupSUTFinishTrigger: "" # empty string = use default
    runSUT: "" # empty string = use default
    runSUTDelay: ""
    runSUTFinishTrigger: ""
    stopSUT: ""
    stopSUTDelay: ""
    stopSUTFinishTrigger: ""
    teardownSUT: "" # custom teardown for this pipeline
    teardownSUTDelay: "" # empty string = use default
    teardownSUTFinishTrigger: "" # empty string = use default
    bringupTestIt: "" # empty string = use default
    bringupTestItDelay: "" # empty string = use default
    bringupTestItFinishTrigger: "" # empty string = use default
    runTestIt: "" # empty string = use default
    runTestItDelay: ""
    runTestItFinishTrigger: ""
    stopTestIt: ""
    stopTestItDelay: ""
    stopTestItFinishTrigger: ""
    teardownTestIt: "" # custom teardown for this pipeline
    teardownTestItDelay: "" # empty string = use default
    teardownTestItFinishTrigger: "" # empty string = use default
