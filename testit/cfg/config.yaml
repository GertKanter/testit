###############################################
#                                             #
#       Configuration template (schema)       #
#                                             #
#  PLEASE LOOK AT THE TUTORIALS FOR EXAMPLES  #
#                                             #
###############################################

configuration:
  dataDirectory: "$(rospack find testit)/data/" # Where to store coverage files, bag files etc.
  bringupSUT: "" # how to bring up a pipeline server/docker SUT (general case), you can use "[[]]" for replacing
  bringupSUTDelay: 1 # duration to wait after command (seconds)
  bringupSUTTimeout: 0 # in seconds (0 for no timeout, but you have to specify bringupSUTFinishTrigger then or tests will not be run because it will be blocking. If bringupSUTFinishTrigger is "-" then this timeout is ignored)
  bringupSUTFinishTrigger: "-" # polling command to test whether startup is finished, "-" = no trigger
  runSUT: "" # run SUT, look at the tutorials for examples
  runSUTDelay: 10 # duration to wait for SUT to come up (roscore initialization)
  runSUTTimeout: 0
  runSUTFinishTrigger: "-"
  stopSUT: "" # how to stop SUT, look at the tutorials for examples
  stopSUTDelay: 5 # duration to wait after stopping the SUT
  stopSUTTimeout: 0
  stopSUTFinishTrigger: "-"
  teardownSUT: "" # how to clean up after finishing (shut down server/docker) (general case)
  teardownSUTDelay: 0 # duration to wait after teardown
  teardownSUTTimeout: 5
  teardownSUTFinishTrigger: "-"
  bringupTestIt: "" # bring up the pipeline server (in the cloud for example)
  bringupTestItDelay: 1 # duration to wait after command
  bringupTestItTimeout: 0
  bringupTestItFinishTrigger: "-"
  runTestIt: "" # how to bring up a pipeline TestIt (general case), you can use "[[]]" for replacing 
  runTestItDelay: 5 # duration to wait after command
  runTestItTimeout: 0
  runTestItFinishTrigger: "-"
  stopTestIt: "" # general case pipeline stopping
  stopTestItDelay: 5 # duration to wait after command
  stopTestItTimeout: 0
  stopTestItFinishTrigger: "-"
  teardownTestIt: ""
  teardownTestItDelay: 1 # duration to wait after command
  teardownTestItTimeout: 0 # empty string = use default
  teardownTestItFinishTrigger: "-" # command to test whether startup is finished, "-" = no trigger
  bagEnabled: False # set to True, if you want to bag data
  bagDuration: 30 # seconds, "rosbag record" file duration for test failure analysis
  bagMaxSplits: 2 # number of bags to keep in rotation (total rosbag duration for post-failure analysis = bagMaxSplits * bagDuration)
  bagTopicRegex: "" # match topics using regular expressions, "" = all topics
  bagTopicExcludeRegex: "" # exclude topics matching this regular expression

pipelines:
  - tag: "Example pipeline" # identifier for reporting
    sutConnection: "-" # (e.g., "user@pipe1.domain.com"). "-" means no command (ssh, scp) wrapping, execute docker and other commands on localhost. Note that bringup/teardown are not wrapped. Run/stop + test commands are wrapped
    testItConnection: "-" # see above; "-" means testIt runs at the pipeline itself (i.e., localhost); commonly sutConnection==testItConnection with both containers running in the same server
    masterHost: "" # master hostname, look at the tutorials for examples
    testItHost: "" # testit hostname, look at the tutorials for examples
    masterIP: "-" # where SUT roscore is running (used if masterHost is not defined) ("-" means none)
    testItIP: "-" # where TestIt docker container is running (used if testitHost is not defined) ("-" means none)
    testItVolume: "" # where TestIt volume is located (test scenarios + bags are stored there) at the [[testItConnection]] host.
    sharedDirectory: "" # shared volume for TestIt docker container (shared files with host, e.g. "/testit/")
    resultsDirectory: "" # where to store results inside TestIt docker w.r.t sharedDirectory (i.e., sharedDirectory="/testit/" and resultsDirectory="testit_tests/results/" => results will be stored in "/testit/testit_tests/results")
    postSuccessCommand: "" # default command to run after test was SUCCESS (this command is run in pipeline, not in testit container)
    postFailureCommand: "" # default command to run after test was FAILURE (this command is run in pipeline, not in testit container)
    postCommand: "" # default command to run after test on either SUCCESS or FAILURE (this command is run in pipeline, not in testit container)
    # + all the [bringup,run,stop,teardown][SUT,TestIt] in 'configuration' section

tests:
  - tag: "scenario tag" # identifier for reporting
    credits: 0 # number of test runs, 0 = single test case, CLI "test" command auto-increments credits if credits is zero, use CLI "test --no-credit-increment" in conjunction with "credits" CLI command to load credits for exploratory testing
    priority: 0 # test priority, bigger means more important (exploratory tests check whether higher priority tests are waiting and suspend to let higher priority jobs be completed)
    pipeline: "" # leave empty for any
    verbose: False # if set to True, TestIt daemon logs some additional info
    uppaalModel: "" # {uppaal} define the Uppaal TA model (used for TestIt Uppaal functionality), w.r.t testit_tests directory (e.g., "fixtures/01/model.xml"), check tutorials for an example
    preLaunchCommand: "" # optional command to execute before executing 'launch', useful for sanity check, must return 0 to continue with test
    launch: "" # how to execute this test (run command) in TestIt container
    oracle: "" #  determining whether pass/fail, if empty = "launch" execution result will be used to determine pass/fail
    timeout: 0 # time in seconds for timeout (0 for no timeout)
    timeoutVerdict: False # if timeout occurs, declare the test as this
    bagEnabled: False # set to True, if you want to bag data
    bagDuration: 30 # seconds, "rosbag record" file duration for test failure analysis
    bagMaxSplits: 2 # number of bags to keep in rotation (total rosbag duration for post-failure analysis = bagMaxSplits * bagDuration)
    bagTopicRegex: "" # empty = use default (specified in configuration)
    bagTopicExcludeRegex: "" # empty = use default (specified in configuration)
    postSuccessCommand: "" # command to run after test was SUCCESS (this command is run in pipeline, not in testit container)
    postFailureCommand: "" # command to run after test was FAILURE (this command is run in pipeline, not in testit container)
    postCommand: "" # command to run after test on either SUCCESS or FAILURE (this command is run in pipeline, not in testit container)
    bringupSUT: "" # how to bring up a pipeline server/docker SUT (general case), you can use "[[]]" for replacing
    bringupSUTDelay: 1 # duration to wait after command (seconds)
    bringupSUTTimeout: 0 # in seconds (0 for no timeout, but you have to specify bringupSUTFinishTrigger then or tests will not be run because it will be blocking. If bringupSUTFinishTrigger is "-" then this timeout is ignored)
    bringupSUTFinishTrigger: "-" # polling command to test whether startup is finished, "-" = no trigger
    runSUT: "" # run SUT, look at the tutorials for examples
    runSUTDelay: 10 # duration to wait for SUT to come up (roscore initialization)
    runSUTTimeout: 0
    runSUTFinishTrigger: "-"
    stopSUT: "" # how to stop SUT, look at the tutorials for examples
    stopSUTDelay: 5 # duration to wait after stopping the SUT
    stopSUTTimeout: 0
    stopSUTFinishTrigger: "-"
    teardownSUT: "" # how to clean up after finishing (shut down server/docker) (general case)
    teardownSUTDelay: 0 # duration to wait after teardown
    teardownSUTTimeout: 5
    teardownSUTFinishTrigger: "-"
    bringupTestIt: "" # bring up the pipeline server (in the cloud for example)
    bringupTestItDelay: 1 # duration to wait after command
    bringupTestItTimeout: 0
    bringupTestItFinishTrigger: "-"
    runTestIt: "" # how to bring up a pipeline TestIt (general case), you can use "[[]]" for replacing 
    runTestItDelay: 5 # duration to wait after command
    runTestItTimeout: 0
    runTestItFinishTrigger: "-"
    stopTestIt: "" # general case pipeline stopping
    stopTestItDelay: 5 # duration to wait after command
    stopTestItTimeout: 0
    stopTestItFinishTrigger: "-"
    teardownTestIt: ""
    teardownTestItDelay: 1 # duration to wait after command
    teardownTestItTimeout: 0 # empty string = use default
    teardownTestItFinishTrigger: "-" # command to test whether startup is finished, "-" = no trigger
